import { NotifierConfig } from './../models/notifier-config.model';
import { NotifierNotificationOptions } from './../models/notifier-notification.model';
import { NotifierQueueService } from './notifier-queue.service';
/**
 * Notifier service
 *
 * This service provides access to the public notifier API. Once injected into a component, directive, pipe, service, or any other building
 * block of an applications, it can be used to show new notifications, and hide existing ones. Internally, it transforms API calls into
 * actions, which then get thrown into the action queue - eventually being processed at the right moment.
 */
import * as ɵngcc0 from '@angular/core';
export declare class NotifierService {
    /**
     * Notifier queue service
     */
    private readonly queueService;
    /**
     * Notifier configuration
     */
    private readonly config;
    /**
     * Constructor
     *
     * @param notifierQueueService Notifier queue service
     * @param config               Notifier configuration, optionally injected as a dependency
     */
    constructor(notifierQueueService: NotifierQueueService, config: NotifierConfig);
    /**
     * Get the notifier configuration
     *
     * @returns Notifier configuration
     */
    getConfig(): NotifierConfig;
    /**
     * API: Show a new notification
     *
     * @param notificationOptions Notification options
     */
    show(notificationOptions: NotifierNotificationOptions): void;
    /**
     * API: Hide a specific notification, given its ID
     *
     * @param notificationId ID of the notification to hide
     */
    hide(notificationId: string): void;
    /**
     * API: Hide the newest notification
     */
    hideNewest(): void;
    /**
     * API: Hide the oldest notification
     */
    hideOldest(): void;
    /**
     * API: Hide all notifications at once
     */
    hideAll(): void;
    /**
     * API: Shortcut for showing a new notification
     *
     * @param type             Type of the notification
     * @param message          Message of the notification
     * @param [notificationId] Unique ID for the notification (optional)
     */
    notify(type: string, message: string, notificationId?: string): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NotifierService>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<NotifierService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWZpZXIuc2VydmljZS5kLnRzIiwic291cmNlcyI6WyJub3RpZmllci5zZXJ2aWNlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7O0FBVUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBc0RBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTm90aWZpZXJDb25maWcgfSBmcm9tICcuLy4uL21vZGVscy9ub3RpZmllci1jb25maWcubW9kZWwnO1xuaW1wb3J0IHsgTm90aWZpZXJOb3RpZmljYXRpb25PcHRpb25zIH0gZnJvbSAnLi8uLi9tb2RlbHMvbm90aWZpZXItbm90aWZpY2F0aW9uLm1vZGVsJztcbmltcG9ydCB7IE5vdGlmaWVyUXVldWVTZXJ2aWNlIH0gZnJvbSAnLi9ub3RpZmllci1xdWV1ZS5zZXJ2aWNlJztcbi8qKlxuICogTm90aWZpZXIgc2VydmljZVxuICpcbiAqIFRoaXMgc2VydmljZSBwcm92aWRlcyBhY2Nlc3MgdG8gdGhlIHB1YmxpYyBub3RpZmllciBBUEkuIE9uY2UgaW5qZWN0ZWQgaW50byBhIGNvbXBvbmVudCwgZGlyZWN0aXZlLCBwaXBlLCBzZXJ2aWNlLCBvciBhbnkgb3RoZXIgYnVpbGRpbmdcbiAqIGJsb2NrIG9mIGFuIGFwcGxpY2F0aW9ucywgaXQgY2FuIGJlIHVzZWQgdG8gc2hvdyBuZXcgbm90aWZpY2F0aW9ucywgYW5kIGhpZGUgZXhpc3Rpbmcgb25lcy4gSW50ZXJuYWxseSwgaXQgdHJhbnNmb3JtcyBBUEkgY2FsbHMgaW50b1xuICogYWN0aW9ucywgd2hpY2ggdGhlbiBnZXQgdGhyb3duIGludG8gdGhlIGFjdGlvbiBxdWV1ZSAtIGV2ZW50dWFsbHkgYmVpbmcgcHJvY2Vzc2VkIGF0IHRoZSByaWdodCBtb21lbnQuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE5vdGlmaWVyU2VydmljZSB7XG4gICAgLyoqXG4gICAgICogTm90aWZpZXIgcXVldWUgc2VydmljZVxuICAgICAqL1xuICAgIHByaXZhdGUgcmVhZG9ubHkgcXVldWVTZXJ2aWNlO1xuICAgIC8qKlxuICAgICAqIE5vdGlmaWVyIGNvbmZpZ3VyYXRpb25cbiAgICAgKi9cbiAgICBwcml2YXRlIHJlYWRvbmx5IGNvbmZpZztcbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3RvclxuICAgICAqXG4gICAgICogQHBhcmFtIG5vdGlmaWVyUXVldWVTZXJ2aWNlIE5vdGlmaWVyIHF1ZXVlIHNlcnZpY2VcbiAgICAgKiBAcGFyYW0gY29uZmlnICAgICAgICAgICAgICAgTm90aWZpZXIgY29uZmlndXJhdGlvbiwgb3B0aW9uYWxseSBpbmplY3RlZCBhcyBhIGRlcGVuZGVuY3lcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihub3RpZmllclF1ZXVlU2VydmljZTogTm90aWZpZXJRdWV1ZVNlcnZpY2UsIGNvbmZpZzogTm90aWZpZXJDb25maWcpO1xuICAgIC8qKlxuICAgICAqIEdldCB0aGUgbm90aWZpZXIgY29uZmlndXJhdGlvblxuICAgICAqXG4gICAgICogQHJldHVybnMgTm90aWZpZXIgY29uZmlndXJhdGlvblxuICAgICAqL1xuICAgIGdldENvbmZpZygpOiBOb3RpZmllckNvbmZpZztcbiAgICAvKipcbiAgICAgKiBBUEk6IFNob3cgYSBuZXcgbm90aWZpY2F0aW9uXG4gICAgICpcbiAgICAgKiBAcGFyYW0gbm90aWZpY2F0aW9uT3B0aW9ucyBOb3RpZmljYXRpb24gb3B0aW9uc1xuICAgICAqL1xuICAgIHNob3cobm90aWZpY2F0aW9uT3B0aW9uczogTm90aWZpZXJOb3RpZmljYXRpb25PcHRpb25zKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBBUEk6IEhpZGUgYSBzcGVjaWZpYyBub3RpZmljYXRpb24sIGdpdmVuIGl0cyBJRFxuICAgICAqXG4gICAgICogQHBhcmFtIG5vdGlmaWNhdGlvbklkIElEIG9mIHRoZSBub3RpZmljYXRpb24gdG8gaGlkZVxuICAgICAqL1xuICAgIGhpZGUobm90aWZpY2F0aW9uSWQ6IHN0cmluZyk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogQVBJOiBIaWRlIHRoZSBuZXdlc3Qgbm90aWZpY2F0aW9uXG4gICAgICovXG4gICAgaGlkZU5ld2VzdCgpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIEFQSTogSGlkZSB0aGUgb2xkZXN0IG5vdGlmaWNhdGlvblxuICAgICAqL1xuICAgIGhpZGVPbGRlc3QoKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBBUEk6IEhpZGUgYWxsIG5vdGlmaWNhdGlvbnMgYXQgb25jZVxuICAgICAqL1xuICAgIGhpZGVBbGwoKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBBUEk6IFNob3J0Y3V0IGZvciBzaG93aW5nIGEgbmV3IG5vdGlmaWNhdGlvblxuICAgICAqXG4gICAgICogQHBhcmFtIHR5cGUgICAgICAgICAgICAgVHlwZSBvZiB0aGUgbm90aWZpY2F0aW9uXG4gICAgICogQHBhcmFtIG1lc3NhZ2UgICAgICAgICAgTWVzc2FnZSBvZiB0aGUgbm90aWZpY2F0aW9uXG4gICAgICogQHBhcmFtIFtub3RpZmljYXRpb25JZF0gVW5pcXVlIElEIGZvciB0aGUgbm90aWZpY2F0aW9uIChvcHRpb25hbClcbiAgICAgKi9cbiAgICBub3RpZnkodHlwZTogc3RyaW5nLCBtZXNzYWdlOiBzdHJpbmcsIG5vdGlmaWNhdGlvbklkPzogc3RyaW5nKTogdm9pZDtcbn1cbiJdfQ==